# SECTION 1: Spam-App Application deployment values  
replicaCount: 1
# Public image provided in task
image:
  repository: andriiuni/spam2000
  pullPolicy: IfNotPresent
  tag: ""
  containerPort: 3000 #Was derived from analyzing the layers of the resulting image  

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Service for spam-app application. Target and service ports are the same and using .Values.Service.port
Service:
  type: ClusterIP
  port: 3000

livenessProbe:
  httpGet:
    path: /health
    port: 3000
  initialDelaySeconds: 15
  periodSeconds: 20

readinessProbe:
  httpGet:
    path: /health
    port: 3000
  initialDelaySeconds: 5
  periodSeconds: 10


# SECTION 2: VM Cluster settings
# The settings were specified according to the documentation and are required to allow data to be received from the VM cluster on specific ports.

victoria-metrics-cluster:
  vmselect:
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8481"

  vminsert:
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8480"

  vmstorage:
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "8482"

# SECTION 3: VM Agent settings
# The settings for the agent take into account the use of ConfigMap to pass scrapeConfig. Also, the maxScrapeSize limit for the spam-app was increased because the log stream was exceeding the standard limit
victoria-metrics-agent:
  remoteWriteUrls:
    - 'http://vmcluster-victoria-metrics-cluster-vminsert.default.svc.cluster.local:8480/insert/0/prometheus/'
  extraVolumes:
    - name: config-volume
      configMap:
        name: vmagent-config
  extraVolumeMounts:
    - name: config-volume
      mountPath: /etc/vmagent/config/guide-vmcluster-vmagent-values.yaml
      subPath: guide-vmcluster-vmagent-values.yaml
  configMap: "vmagent-config"
  extraArgs:
    promscrape.config: /etc/vmagent/config/guide-vmcluster-vmagent-values.yaml
    promscrape.maxScrapeSize: 2GB

# SECTION 4: Grafana settings
# Defining the default data source as vmselect, whose port was designated earlier in the file when defining the cluster settings.
# Defining standard dashboards available publicly for cluster state monitoring and add json of our custom dashboard as well.
grafana:
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: victoriametrics
          type: prometheus
          orgId: 1
          url: http://vmcluster-victoria-metrics-cluster-vmselect.default.svc.cluster.local:8481/select/0/prometheus/
          access: proxy
          isDefault: true
          updateIntervalSeconds: 10
          editable: true

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: true
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default

  dashboards:
    default:
      victoriametrics:
        gnetId: 11176
        revision: 18
        datasource: victoriametrics
      vmagent:
        gnetId: 12683
        revision: 7
        datasource: victoriametrics
      kubernetes:
        gnetId: 14205
        revision: 1
        datasource: victoriametrics
      spam-app-dashboard:
        json: |
          {{ .Files.Get "dashboards/default/spam-app-dashboard.json" }}

